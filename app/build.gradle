apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    //默认配置
    defaultConfig {
        applicationId "com.malalaoshi.android.malapad"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        jackOptions{
            enabled true
        }
    }

    //添加我们的签名文件配置
    signingConfigs{
        //为我们的release包添加签名文件配置
        release{
            try {
                storeFile file(KEYSTORE_FILE_PATH)
                storePassword KEYSTORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
            catch (ex) {
                throw new RuntimeException(
                        "You should define KEYSTORE_FILE_PATH, KEYSTORE_PASSWORD, KEY_ALIAS and KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    //指定需要打那些包
    buildTypes {
        debug{
            applicationIdSuffix ".debug"
            buildConfigField "boolean", "LOG_DEBUG", "true"
            versionNameSuffix "-debug"
            minifyEnabled false
            zipAlignEnabled false
            resValue("string", "build_type", "debug")
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //签名
            signingConfig signingConfigs.release
            resValue("string", "build_type", "release")
            //指定release包的输出名字就是我们的渠道名
            /*applicationVariants.all{ variant ->
                variant.outputs.each{ output ->
                    def outputFile = output.outputFile
                        if (outputFile!=null&&outputFile.name.endsWith(".apk")){
                            def fileName = "${variant.productFlavors[0].name}"+".apk"
                            output.outputFile = new File(outputFile.parent,fileName);
                        }
                }

            }*/

        }
    }



    productFlavors{
        //不同环境的包现在按照不同渠道打包处理
        dev{
            applicationIdSuffix ".dev"
            versionNameSuffix "-dev"
            buildConfigField("String", "API_HOST", "\"" + DEV_SERVER + "\"")
            resValue("string", "api_host", "\"" + DEV_SERVER + "\"")

        }
        prd{
            buildConfigField("String", "API_HOST", "\"" + PRD_SERVER + "\"")
            resValue("string", "api_host", "\"" + PRD_SERVER + "\"")
        }
        stage{
            applicationIdSuffix ".stage"
            versionNameSuffix "-stage"
            buildConfigField("String", "API_HOST", "\"" + STAGE_SERVER + "\"")
            resValue("string", "api_host", "\"" + STAGE_SERVER + "\"")
        }

    }

   /* productFlavors.all{
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANEL_VALUE:name]
    }*/

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.1.0'
    testCompile 'junit:junit:4.12'
    compile project(':comm')

    compile 'com.jakewharton:butterknife:8.4.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.4.0'
}
